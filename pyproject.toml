[build-system]
requires = ["hatchling>=1.26", "hatch-vcs"]
build-backend = "hatchling.build"



[project]
name = "treasure-island"
description = "A pirate version of the Aegean source finding program, and associated tools."
readme = "README.md"
license = { text = "AFL-3.0" }
authors = [
    { name = "Alec Thomson"},
    { name = "Tim Galvin"},
    { name = "Paul Hancock", email = "Mr.Paul.Hancock@gmail.com" }
]
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dependencies = [
    "scipy>=0.16",
    "tqdm>=4",
    "numpy>=1.22,<2",
    "astropy>=2.0",
    "healpy>=1.10",
    "lmfit>=0.9.2",
    "scikit-learn>=0.24.2",
    "rocket-fft>=0.2.3",
    "numba>=0.58",
    "radio-beam"
]

[project.urls]
Homepage = "https://github.com/flint-crew/treasure-island"
"Bug Tracker" = "https://github.com/flint-crew/treasure-island/issues"
Discussions = "https://github.com/flint-crew/treasure-island/discussions"
Changelog = "https://github.com/flint-crew/treasure-island/releases"

[dependency-groups]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]

[project.scripts]
aegean = "treasure_island.CLI.aegean:main"
BANE = "treasure_island.CLI.BANE:main"
SR6 = "treasure_island.CLI.SR6:main"
AeRes = "treasure_island.CLI.AeRes:main"
MIMAS = "treasure_island.CLI.MIMAS:main"
AeReg = "treasure_island.CLI.AeReg:main"
fix_beam = "treasure_island.CLI.fix_beam:main"
BANE_fft = "treasure_island.CLI.BANE_fft:main"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "treasure_island/_version.py"
build.include = [
  "scripts/**",
]


[tool.hatch.metadata]
keywords = [
  "image processing",
  "radioastronomy"
]

[project.optional-dependencies]
test = [
  "pytest",
  "nose"
]

[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "G004",     # Logging statement uses f-string
  "PTH",
  "SIM115",
  "B904",
  "E741",
  "G003",
  "G001",
  "PLW0603"
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ALL"]
